stages:
  - build
  - test

variables:
  GIT_SUBMODULE_STRATEGY: recursive
# ----

build linux:
  tags: [kaolin]
  stage: build
  image: "docker:19.03.9"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - ci/build-linux.sh
  artifacts:
    name: "kaolin-$CI_JOB_NAME-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
    paths: ['artifacts/']
    when: always

build windows:
  tags: [kaolin_windows]
  stage: build
  script:
    - ci\build-windows.ps1
  artifacts:
    name: "kaolin-$CI_JOB_NAME-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
    paths: ['artifacts/']
    when: always

build linux no cache:
  when: manual
  tags: [kaolin]
  stage: build
  image: "docker:19.03.9"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - ci/build-linux-no-cache.sh
  artifacts:
    name: "kaolin-$CI_JOB_NAME-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
    paths: ['artifacts/']
    when: always

build windows no cache:
  when: manual
  tags: [kaolin_windows]
  stage: build
  script:
    - ci\build-windows-no-cache.ps1
  artifacts:
    name: "kaolin-$CI_JOB_NAME-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
    paths: ['artifacts/']
    when: always


# ----

flake8 linux:
  tags: [kaolin]
  stage: test
  needs: ['build linux']
  image: "docker:19.03.0"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - ci/flake8-linux.sh

pytest linux:
  tags: [kaolin]
  stage: test
  needs: ['build linux']
  image: "docker:19.03.0"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - ci/pytest-linux.sh

dibr-notebook linux:
  tags: [kaolin]
  stage: test
  needs: ['build linux']
  image: "docker:19.03.0"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - ci/dibr-notebook-linux.sh

dmtet-notebook linux:
  tags: [kaolin]
  stage: test
  needs: ['build linux']
  image: "docker:19.03.0"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - ci/dmtet-notebook-linux.sh

understanding-spcs-notebook linux:
  tags: [kaolin]
  stage: test
  needs: ['build linux']
  image: "docker:19.03.0"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - ci/understanding-spcs-notebook-linux.sh

test windows:
  tags: [kaolin_windows]
  stage: test
  needs: ['build windows']
  script:
    - ci\test-windows.bat
